{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","_this$props","this","Table_TableHeader","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","onFormSubmit","preventDefault","handleSubmit","state","initialState","_this$state","onSubmit","type","onChange","App","characters","filter","character","i","concat","toConsumableArray","className","src_Table","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.64e1228f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n//\r\n// class Table extends Component {\r\n//   render() {\r\n//     return (\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Job</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           <tr>\r\n//             <td>Charlie</td>\r\n//             <td>Janitor</td>\r\n//           </tr>\r\n//           <tr>\r\n//             <td>Mac</td>\r\n//             <td>Bouncer</td>\r\n//           </tr>\r\n//           <tr>\r\n//             <td>Dee</td>\r\n//             <td>Aspiring actress</td>\r\n//           </tr>\r\n//           <tr>\r\n//             <td>Dennis</td>\r\n//             <td>Bartender</td>\r\n//           </tr>\r\n//         </tbody>\r\n//       </table>\r\n//     )\r\n//   }\r\n// }\r\n\r\n\r\nconst TableHeader = () => {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th>Name</th>\r\n        <th>Job</th>\r\n        <th>Remove</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nconst TableBody = props => {\r\n  const rows = props.characterData.map((row, index) => {\r\n    return (\r\n      <tr key={index}>\r\n        <td>{row.name}</td>\r\n        <td>{row.job}</td>\r\n        <td>\r\n          <button  onClick={() => props.removeCharacter(index)}>Delete</button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n\r\n  return <tbody>{rows}</tbody>\r\n}\r\n\r\n\r\nclass Table extends Component {\r\n  render () {\r\n    const { characterData, removeCharacter } = this.props\r\n\r\n    return (\r\n    <table>\r\n      <TableHeader />\r\n      <TableBody characterData={characterData} removeCharacter={removeCharacter} />\r\n    </table>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Table;\r\n","import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.initialState = {\r\n      name: '',\r\n      job: '',\r\n    };\r\n\r\n    this.state = this.initialState;\r\n  }\r\n\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.target\r\n\r\n    this.setState({\r\n     [name]: value\r\n   });\r\n  }\r\n\r\nonFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.handleSubmit(this.state);\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  render() {\r\n    const { name, job } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.onFormSubmit}>\r\n       <label>Name</label>\r\n       <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={this.handleChange} />\r\n       <label>Job</label>\r\n       <input\r\n          type=\"text\"\r\n          name=\"job\"\r\n          value={job}\r\n          onChange={this.handleChange} />\r\n       <button type=\"submit\">\r\n         Submit\r\n       </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport Table from './Table';\nimport Form from './Form';\nimport './style.css';\n\nclass App extends Component {\n\n\n    state =  {\n         characters : []\n      };\n\n      removeCharacter = index => {\n        const { characters } = this.state;\n\n        this.setState({\n          characters: characters.filter((character, i) => {\n            return i !== index;\n          })\n        });\n      }\n\n      handleSubmit = character => {\n        this.setState ({ characters: [...this.state.characters, character] })\n      }\n\n    render() {\n      const { characters } =this.state;\n\n      return (\n        <div className=\"container\">\n         <Table characterData={characters} removeCharacter={this.removeCharacter} />\n         <Form  handleSubmit={this.handleSubmit} />\n        </div>\n      );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './style.css';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}